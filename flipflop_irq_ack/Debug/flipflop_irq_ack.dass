
./Debug/flipflop_irq_ack.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 */
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8a2 	bl	2000014c <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:

//Global variables
volatile unsigned int count = 0;
void irq_handler(void);

void init_app(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    
     #ifdef USBDM
	 *( (unsigned long *) 0x40023830) = 0x18;
	 __asm volatile( " LDR R0,=0x08000209\n BLX R0 \n");
#endif
	*PORT_E_Moder = 0;
20000014:	4b1d      	ldr	r3, [pc, #116]	; (2000008c <init_app+0x7c>)
20000016:	2200      	movs	r2, #0
20000018:	601a      	str	r2, [r3, #0]
	*PORT_D_Moder &= 0;
2000001a:	4b1d      	ldr	r3, [pc, #116]	; (20000090 <init_app+0x80>)
2000001c:	681b      	ldr	r3, [r3, #0]
2000001e:	4b1c      	ldr	r3, [pc, #112]	; (20000090 <init_app+0x80>)
20000020:	2200      	movs	r2, #0
20000022:	601a      	str	r2, [r3, #0]
	*PORT_D_Moder |= 0x55555555;
20000024:	4b1a      	ldr	r3, [pc, #104]	; (20000090 <init_app+0x80>)
20000026:	681a      	ldr	r2, [r3, #0]
20000028:	4b19      	ldr	r3, [pc, #100]	; (20000090 <init_app+0x80>)
2000002a:	491a      	ldr	r1, [pc, #104]	; (20000094 <init_app+0x84>)
2000002c:	430a      	orrs	r2, r1
2000002e:	601a      	str	r2, [r3, #0]
	*PORT_D_OdrHigh = 0;
20000030:	4b19      	ldr	r3, [pc, #100]	; (20000098 <init_app+0x88>)
20000032:	2200      	movs	r2, #0
20000034:	701a      	strb	r2, [r3, #0]
	
	/* aktiverar NVIC för EXTI3*/
	*NVIC_ISER0 |= (1<<9);
20000036:	4b19      	ldr	r3, [pc, #100]	; (2000009c <init_app+0x8c>)
20000038:	681a      	ldr	r2, [r3, #0]
2000003a:	4b18      	ldr	r3, [pc, #96]	; (2000009c <init_app+0x8c>)
2000003c:	2180      	movs	r1, #128	; 0x80
2000003e:	0089      	lsls	r1, r1, #2
20000040:	430a      	orrs	r2, r1
20000042:	601a      	str	r2, [r3, #0]
	
	*((void(**)(void))0x2001C064) = irq_handler;
20000044:	4b16      	ldr	r3, [pc, #88]	; (200000a0 <init_app+0x90>)
20000046:	4a17      	ldr	r2, [pc, #92]	; (200000a4 <init_app+0x94>)
20000048:	601a      	str	r2, [r3, #0]
	/* Nollställ fält */
	*SYSCFG_EXTICR1 &= ~0xFFFF;
2000004a:	4b17      	ldr	r3, [pc, #92]	; (200000a8 <init_app+0x98>)
2000004c:	681a      	ldr	r2, [r3, #0]
2000004e:	4b16      	ldr	r3, [pc, #88]	; (200000a8 <init_app+0x98>)
20000050:	0c12      	lsrs	r2, r2, #16
20000052:	0412      	lsls	r2, r2, #16
20000054:	601a      	str	r2, [r3, #0]
	/* PE3 -> EXTI3*/
	*SYSCFG_EXTICR1 |= 0x4444;
20000056:	4b14      	ldr	r3, [pc, #80]	; (200000a8 <init_app+0x98>)
20000058:	681a      	ldr	r2, [r3, #0]
2000005a:	4b13      	ldr	r3, [pc, #76]	; (200000a8 <init_app+0x98>)
2000005c:	4913      	ldr	r1, [pc, #76]	; (200000ac <init_app+0x9c>)
2000005e:	430a      	orrs	r2, r1
20000060:	601a      	str	r2, [r3, #0]
	
	*EXTI_IMR |= 0xF;
20000062:	4b13      	ldr	r3, [pc, #76]	; (200000b0 <init_app+0xa0>)
20000064:	681a      	ldr	r2, [r3, #0]
20000066:	4b12      	ldr	r3, [pc, #72]	; (200000b0 <init_app+0xa0>)
20000068:	210f      	movs	r1, #15
2000006a:	430a      	orrs	r2, r1
2000006c:	601a      	str	r2, [r3, #0]
	*EXTI_FTSR |= 0xF;
2000006e:	4b11      	ldr	r3, [pc, #68]	; (200000b4 <init_app+0xa4>)
20000070:	681a      	ldr	r2, [r3, #0]
20000072:	4b10      	ldr	r3, [pc, #64]	; (200000b4 <init_app+0xa4>)
20000074:	210f      	movs	r1, #15
20000076:	430a      	orrs	r2, r1
20000078:	601a      	str	r2, [r3, #0]
	*EXTI_RTSR &= 0;
2000007a:	4b0f      	ldr	r3, [pc, #60]	; (200000b8 <init_app+0xa8>)
2000007c:	681b      	ldr	r3, [r3, #0]
2000007e:	4b0e      	ldr	r3, [pc, #56]	; (200000b8 <init_app+0xa8>)
20000080:	2200      	movs	r2, #0
20000082:	601a      	str	r2, [r3, #0]
	
	

}
20000084:	46c0      	nop			; (mov r8, r8)
20000086:	46bd      	mov	sp, r7
20000088:	bd80      	pop	{r7, pc}
2000008a:	46c0      	nop			; (mov r8, r8)
2000008c:	40021000 	andmi	r1, r2, r0
20000090:	40020c00 	andmi	r0, r2, r0, lsl #24
20000094:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000098:	40020c15 	andmi	r0, r2, r5, lsl ip
2000009c:	e000e100 	and	lr, r0, r0, lsl #2
200000a0:	2001c064 	andcs	ip, r1, r4, rrx
200000a4:	200000bd 	strhcs	r0, [r0], -sp
200000a8:	40013808 	andmi	r3, r1, r8, lsl #16
200000ac:	00004444 	andeq	r4, r0, r4, asr #8
200000b0:	40013c00 	andmi	r3, r1, r0, lsl #24
200000b4:	40013c0c 	andmi	r3, r1, ip, lsl #24
200000b8:	40013c08 	andmi	r3, r1, r8, lsl #24

200000bc <irq_handler>:
		*EXTI_PR |= EXTI3_IRQ3_BPOS;
	}
}*/

void irq_handler(void)
{
200000bc:	b580      	push	{r7, lr}
200000be:	af00      	add	r7, sp, #0
	if((*EXTI_PR & EXTI3_IRQ3_BPOS) != 0){ 	//Om bit 3 i EXTI_PR är 1 --> trigg har upträtt
200000c0:	4b1f      	ldr	r3, [pc, #124]	; (20000140 <irq_handler+0x84>)
200000c2:	681b      	ldr	r3, [r3, #0]
200000c4:	2208      	movs	r2, #8
200000c6:	4013      	ands	r3, r2
200000c8:	d037      	beq.n	2000013a <irq_handler+0x7e>
		
		if((*EXTI_PR & IRQ0) != 0) {
200000ca:	4b1d      	ldr	r3, [pc, #116]	; (20000140 <irq_handler+0x84>)
200000cc:	681b      	ldr	r3, [r3, #0]
200000ce:	2201      	movs	r2, #1
200000d0:	4013      	ands	r3, r2
200000d2:	d00b      	beq.n	200000ec <irq_handler+0x30>
			*EXTI_PR |= IRQ0;
200000d4:	4b1a      	ldr	r3, [pc, #104]	; (20000140 <irq_handler+0x84>)
200000d6:	681a      	ldr	r2, [r3, #0]
200000d8:	4b19      	ldr	r3, [pc, #100]	; (20000140 <irq_handler+0x84>)
200000da:	2101      	movs	r1, #1
200000dc:	430a      	orrs	r2, r1
200000de:	601a      	str	r2, [r3, #0]
			count++;
200000e0:	4b18      	ldr	r3, [pc, #96]	; (20000144 <irq_handler+0x88>)
200000e2:	681b      	ldr	r3, [r3, #0]
200000e4:	1c5a      	adds	r2, r3, #1
200000e6:	4b17      	ldr	r3, [pc, #92]	; (20000144 <irq_handler+0x88>)
200000e8:	601a      	str	r2, [r3, #0]
200000ea:	e020      	b.n	2000012e <irq_handler+0x72>
		}
		else if((*EXTI_PR & IRQ1) != 0){
200000ec:	4b14      	ldr	r3, [pc, #80]	; (20000140 <irq_handler+0x84>)
200000ee:	681b      	ldr	r3, [r3, #0]
200000f0:	2202      	movs	r2, #2
200000f2:	4013      	ands	r3, r2
200000f4:	d009      	beq.n	2000010a <irq_handler+0x4e>
			*EXTI_PR |= IRQ1;
200000f6:	4b12      	ldr	r3, [pc, #72]	; (20000140 <irq_handler+0x84>)
200000f8:	681a      	ldr	r2, [r3, #0]
200000fa:	4b11      	ldr	r3, [pc, #68]	; (20000140 <irq_handler+0x84>)
200000fc:	2102      	movs	r1, #2
200000fe:	430a      	orrs	r2, r1
20000100:	601a      	str	r2, [r3, #0]
			count = 0;
20000102:	4b10      	ldr	r3, [pc, #64]	; (20000144 <irq_handler+0x88>)
20000104:	2200      	movs	r2, #0
20000106:	601a      	str	r2, [r3, #0]
20000108:	e011      	b.n	2000012e <irq_handler+0x72>
		}
		else if((*EXTI_PR & IRQ2) != 0){
2000010a:	4b0d      	ldr	r3, [pc, #52]	; (20000140 <irq_handler+0x84>)
2000010c:	681b      	ldr	r3, [r3, #0]
2000010e:	2204      	movs	r2, #4
20000110:	4013      	ands	r3, r2
20000112:	d00c      	beq.n	2000012e <irq_handler+0x72>
			*EXTI_PR |= IRQ2;
20000114:	4b0a      	ldr	r3, [pc, #40]	; (20000140 <irq_handler+0x84>)
20000116:	681a      	ldr	r2, [r3, #0]
20000118:	4b09      	ldr	r3, [pc, #36]	; (20000140 <irq_handler+0x84>)
2000011a:	2104      	movs	r1, #4
2000011c:	430a      	orrs	r2, r1
2000011e:	601a      	str	r2, [r3, #0]
			*PORT_D_OdrHigh = ~*PORT_D_OdrHigh;		//Tänd/släck diodlampa
20000120:	4b09      	ldr	r3, [pc, #36]	; (20000148 <irq_handler+0x8c>)
20000122:	781b      	ldrb	r3, [r3, #0]
20000124:	b2db      	uxtb	r3, r3
20000126:	4a08      	ldr	r2, [pc, #32]	; (20000148 <irq_handler+0x8c>)
20000128:	43db      	mvns	r3, r3
2000012a:	b2db      	uxtb	r3, r3
2000012c:	7013      	strb	r3, [r2, #0]
		}
		*EXTI_PR |= EXTI3_IRQ3_BPOS;
2000012e:	4b04      	ldr	r3, [pc, #16]	; (20000140 <irq_handler+0x84>)
20000130:	681a      	ldr	r2, [r3, #0]
20000132:	4b03      	ldr	r3, [pc, #12]	; (20000140 <irq_handler+0x84>)
20000134:	2108      	movs	r1, #8
20000136:	430a      	orrs	r2, r1
20000138:	601a      	str	r2, [r3, #0]
	}
}
2000013a:	46c0      	nop			; (mov r8, r8)
2000013c:	46bd      	mov	sp, r7
2000013e:	bd80      	pop	{r7, pc}
20000140:	40013c14 	andmi	r3, r1, r4, lsl ip
20000144:	20000168 	andcs	r0, r0, r8, ror #2
20000148:	40020c15 	andmi	r0, r2, r5, lsl ip

2000014c <main>:


void main(void)
{
2000014c:	b580      	push	{r7, lr}
2000014e:	af00      	add	r7, sp, #0
	init_app();
20000150:	f7ff ff5e 	bl	20000010 <init_app>
	while(1){
		*PORT_D_OdrLow = count;
20000154:	4b02      	ldr	r3, [pc, #8]	; (20000160 <main+0x14>)
20000156:	681a      	ldr	r2, [r3, #0]
20000158:	4b02      	ldr	r3, [pc, #8]	; (20000164 <main+0x18>)
2000015a:	b2d2      	uxtb	r2, r2
2000015c:	701a      	strb	r2, [r3, #0]
2000015e:	e7f9      	b.n	20000154 <main+0x8>
20000160:	20000168 	andcs	r0, r0, r8, ror #2
20000164:	40020c14 	andmi	r0, r2, r4, lsl ip

20000168 <count>:
20000168:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000088 	andeq	r0, r0, r8, lsl #1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000004c 	andeq	r0, r0, ip, asr #32
  10:	0000000c 	andeq	r0, r0, ip
  14:	0000e400 	andeq	lr, r0, r0, lsl #8
	...
  24:	00de0200 	sbcseq	r0, lr, r0, lsl #4
  28:	3c010000 	stccc	0, cr0, [r1], {-0}
  2c:	00003e17 	andeq	r3, r0, r7, lsl lr
  30:	68030500 	stmdavs	r3, {r8, sl}
  34:	03200001 			; <UNDEFINED> instruction: 0x03200001
  38:	00c80704 	sbceq	r0, r8, r4, lsl #14
  3c:	37040000 	strcc	r0, [r4, -r0]
  40:	05000000 	streq	r0, [r0, #-0]
  44:	0000011a 	andeq	r0, r0, sl, lsl r1
  48:	4c067901 			; <UNDEFINED> instruction: 0x4c067901
  4c:	1c200001 	stcne	0, cr0, [r0], #-4
  50:	01000000 	mrseq	r0, (UNDEF: 0)
  54:	0040069c 	umaaleq	r0, r0, ip, r6
  58:	64010000 	strvs	r0, [r1], #-0
  5c:	0000bc06 	andeq	fp, r0, r6, lsl #24
  60:	00009020 	andeq	r9, r0, r0, lsr #32
  64:	069c0100 	ldreq	r0, [ip], r0, lsl #2
  68:	000000d5 	ldrdeq	r0, [r0], -r5
  6c:	10063f01 	andne	r3, r6, r1, lsl #30
  70:	ac200000 	stcge	0, cr0, [r0], #-0
  74:	01000000 	mrseq	r0, (UNDEF: 0)
  78:	011f069c 			; <UNDEFINED> instruction: 0x011f069c
  7c:	07010000 	streq	r0, [r1, -r0]
  80:	00000006 	andeq	r0, r0, r6
  84:	00000c20 	andeq	r0, r0, r0, lsr #24
  88:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13490b39 	movtne	r0, #39737	; 0x9b39
  20:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
  24:	24030000 	strcs	r0, [r3], #-0
  28:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  2c:	000e030b 	andeq	r0, lr, fp, lsl #6
  30:	00350400 	eorseq	r0, r5, r0, lsl #8
  34:	00001349 	andeq	r1, r0, r9, asr #6
  38:	3f002e05 	svccc	0x00002e05
  3c:	3a0e0319 	bcc	380ca8 <startup-0x1fc7f358>
  40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  44:	1119270b 	tstne	r9, fp, lsl #14
  48:	40061201 	andmi	r1, r6, r1, lsl #4
  4c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  50:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
  54:	03193f00 	tsteq	r9, #0, 30
  58:	3b0b3a0e 	blcc	2ce898 <startup-0x1fd31768>
  5c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  60:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  64:	97184006 	ldrls	r4, [r8, -r6]
  68:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000158 	andeq	r0, r0, r8, asr r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000168 	andcs	r0, r0, r8, ror #2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000102 	andeq	r0, r0, r2, lsl #2
   4:	00560003 	subseq	r0, r6, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	696e654c 	stmdbvs	lr!, {r2, r3, r6, r8, sl, sp, lr}^
  28:	65442f61 	strbvs	r2, [r4, #-3937]	; 0xfffff09f
  2c:	6f746b73 	svcvs	0x00746b73
  30:	4f4d2f70 	svcmi	0x004d2f70
  34:	6f572d50 	svcvs	0x00572d50
  38:	70736b72 	rsbsvc	r6, r3, r2, ror fp
  3c:	2f656361 	svccs	0x00656361
  40:	70696c66 	rsbvc	r6, r9, r6, ror #24
  44:	706f6c66 	rsbvc	r6, pc, r6, ror #24
  48:	7172695f 	cmnvc	r2, pc, asr r9
  4c:	6b63615f 	blvs	18d85d0 <startup-0x1e727a30>
  50:	74730000 	ldrbtvc	r0, [r3], #-0
  54:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  58:	00632e70 	rsbeq	r2, r3, r0, ror lr
  5c:	00000001 	andeq	r0, r0, r1
  60:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  64:	00000002 	andeq	r0, r0, r2
  68:	5e131920 	vnmlspl.f16	s2, s6, s1	; <UNPREDICTABLE>
  6c:	01000302 	tsteq	r0, r2, lsl #6
  70:	00140501 	andseq	r0, r4, r1, lsl #10
  74:	00100205 	andseq	r0, r0, r5, lsl #4
  78:	3e032000 	cdpcc	0, 0, cr2, cr3, cr0, {0}
  7c:	34020501 	strcc	r0, [r2], #-1281	; 0xfffffaff
  80:	2f201005 	svccs	0x00201005
  84:	67020559 	smlsdvs	r2, r9, r5, r0
  88:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
  8c:	0205310e 	andeq	r3, r5, #-2147483645	; 0x80000003
  90:	20200576 	eorcs	r0, r0, r6, ror r5
  94:	68301205 	ldmdavs	r0!, {r0, r2, r9, ip}
  98:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
  9c:	0567670d 	strbeq	r6, [r7, #-1805]!	; 0xfffff8f3
  a0:	0c035c01 	stceq	12, cr5, [r3], {1}
  a4:	0605ac08 	streq	sl, [r5], -r8, lsl #24
  a8:	2e0f052f 	cfsh32cs	mvfx0, mvfx15, #31
  ac:	052e0405 	streq	r0, [lr, #-1029]!	; 0xfffffbfb
  b0:	10052207 	andne	r2, r5, r7, lsl #4
  b4:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
  b8:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
  bc:	0c056709 	stceq	7, cr6, [r5], {9}
  c0:	2e150568 	cfmsc32cs	mvfx0, mvfx5, mvfx8
  c4:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
  c8:	0a05210d 	beq	148504 <startup-0x1feb7afc>
  cc:	4c0c0567 	cfstr32mi	mvfx0, [ip], {103}	; 0x67
  d0:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
  d4:	0d052e0a 	stceq	14, cr2, [r5, #-40]	; 0xffffffd8
  d8:	67170521 	ldrvs	r0, [r7, -r1, lsr #10]
  dc:	053c0405 	ldreq	r0, [ip, #-1029]!	; 0xfffffbfb
  e0:	0c052014 	stceq	0, cr2, [r5], {20}
  e4:	6801053e 	stmdavs	r1, {r1, r2, r3, r4, r5, r8, sl}
  e8:	2f020594 	svccs	0x00020594
  ec:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
  f0:	05300104 	ldreq	r0, [r0, #-260]!	; 0xfffffefc
  f4:	04020003 	streq	r0, [r2], #-3
  f8:	12052e01 	andne	r2, r5, #1, 28
  fc:	01040200 	mrseq	r0, R12_usr
 100:	00070220 	andeq	r0, r7, r0, lsr #4
 104:	Address 0x00000104 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff5c5 <count+0xdffff45d>
   4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
   8:	6e654c2f 	cdpvs	12, 6, cr4, cr5, cr15, {1}
   c:	442f6169 	strtmi	r6, [pc], #-361	; 14 <startup-0x1fffffec>
  10:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  14:	4d2f706f 	stcmi	0, cr7, [pc, #-444]!	; fffffe60 <count+0xdffffcf8>
  18:	572d504f 	strpl	r5, [sp, -pc, asr #32]!
  1c:	736b726f 	cmnvc	fp, #-268435450	; 0xf0000006
  20:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
  24:	696c662f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r9, sl, sp, lr}^
  28:	6f6c6670 	svcvs	0x006c6670
  2c:	72695f70 	rsbvc	r5, r9, #112, 30	; 0x1c0
  30:	63615f71 	cmnvs	r1, #452	; 0x1c4
  34:	74732f6b 	ldrbtvc	r2, [r3], #-3947	; 0xfffff095
  38:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  3c:	00632e70 	rsbeq	r2, r3, r0, ror lr
  40:	5f717269 	svcpl	0x00717269
  44:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
  48:	0072656c 	rsbseq	r6, r2, ip, ror #10
  4c:	20554e47 	subscs	r4, r5, r7, asr #28
  50:	20393943 	eorscs	r3, r9, r3, asr #18
  54:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
  58:	30322031 	eorscc	r2, r2, r1, lsr r0
  5c:	30313931 	eorscc	r3, r1, r1, lsr r9
  60:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  64:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  68:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  6c:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  70:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  74:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  78:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  7c:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  80:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  84:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  88:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  8c:	205d3939 	subscs	r3, sp, r9, lsr r9
  90:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  94:	20626d75 	rsbcs	r6, r2, r5, ror sp
  98:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  9c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  a0:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  a4:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  a8:	616d2d20 	cmnvs	sp, r0, lsr #26
  ac:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  b0:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  b4:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  b8:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  bc:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  c0:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  c4:	00393963 	eorseq	r3, r9, r3, ror #18
  c8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  cc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  d0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  d4:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
  d8:	70615f74 	rsbvc	r5, r1, r4, ror pc
  dc:	6f630070 	svcvs	0x00630070
  e0:	00746e75 	rsbseq	r6, r4, r5, ror lr
  e4:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
  e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  ec:	6e654c5c 	mcrvs	12, 3, r4, cr5, cr12, {2}
  f0:	445c6169 	ldrbmi	r6, [ip], #-361	; 0xfffffe97
  f4:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  f8:	4d5c706f 	ldclmi	0, cr7, [ip, #-444]	; 0xfffffe44
  fc:	572d504f 	strpl	r5, [sp, -pc, asr #32]!
 100:	736b726f 	cmnvc	fp, #-268435450	; 0xf0000006
 104:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
 108:	696c665c 	stmdbvs	ip!, {r2, r3, r4, r6, r9, sl, sp, lr}^
 10c:	6f6c6670 	svcvs	0x006c6670
 110:	72695f70 	rsbvc	r5, r9, #112, 30	; 0x1c0
 114:	63615f71 	cmnvs	r1, #452	; 0x1c4
 118:	616d006b 	cmnvs	sp, fp, rrx
 11c:	73006e69 	movwvc	r6, #3689	; 0xe69
 120:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 124:	Address 0x00000124 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	000000ac 	andeq	r0, r0, ip, lsr #1
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	200000bc 	strhcs	r0, [r0], -ip
  48:	00000090 	muleq	r0, r0, r0
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	2000014c 	andcs	r0, r0, ip, asr #2
  64:	0000001c 	andeq	r0, r0, ip, lsl r0
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0000070d 	andeq	r0, r0, sp, lsl #14
